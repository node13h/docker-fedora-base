variables:
  CONTAINER_REGISTRY: docker.io
  IMAGE_NAMESPACE: alikov

stages:
  - build
  - manifest-list

.build:
  stage: build
  script:
    - rm -rf dnf-cache ci/tmp
    - mkdir -p ci/tmp
    - ./dnf-cache.py --log-level DEBUG --version "$FEDORA_VERSION" new "registry.fedoraproject.org/fedora:${FEDORA_VERSION}" "fedora-${ARCH}-${FEDORA_VERSION}"
    - ./build-image.py --log-level DEBUG --push --output-file "ci/tmp/${ARCH}-${FEDORA_VERSION}.json" "${CONTAINER_REGISTRY}/${IMAGE_NAMESPACE%/}/fedora-base-${ARCH}" "fedora-${ARCH}-${FEDORA_VERSION}"
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - when: manual
      allow_failure: true
  artifacts:
    paths:
      - "ci/tmp/${ARCH}-${FEDORA_VERSION}.json"
    expire_in: 1 day

build-amd64-37:
  tags:
    - podman
    - amd64
  extends: .build
  variables:
    FEDORA_VERSION: "37"
    ARCH: amd64

build-amd64-36:
  tags:
    - podman
    - amd64
  extends: .build
  variables:
    FEDORA_VERSION: "36"
    ARCH: amd64

.make-manifest-list:
  stage: manifest-list
  tags:
    - podman
    - amd64
  script:
    - podman manifest rm "${CONTAINER_REGISTRY}/${IMAGE_NAMESPACE%/}/fedora-base:${FEDORA_VERSION}" || true
    - podman manifest create "${CONTAINER_REGISTRY}/${IMAGE_NAMESPACE%/}/fedora-base:${FEDORA_VERSION}"
    - podman manifest add "${CONTAINER_REGISTRY}/${IMAGE_NAMESPACE%/}/fedora-base:${FEDORA_VERSION}" "docker://$(jq -er .image <"ci/tmp/amd64-${FEDORA_VERSION}.json")"
    - podman manifest push "${CONTAINER_REGISTRY}/${IMAGE_NAMESPACE%/}/fedora-base:${FEDORA_VERSION}" "docker://${CONTAINER_REGISTRY}/${IMAGE_NAMESPACE%/}/fedora-base:${FEDORA_VERSION}"

make-manifest-list-37:
  extends: .make-manifest-list
  variables:
    FEDORA_VERSION: "37"
  needs:
    - build-amd64-37

make-manifest-list-36:
  extends: .make-manifest-list
  variables:
    FEDORA_VERSION: "36"
  needs:
    - build-amd64-36
